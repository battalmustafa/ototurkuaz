{"version":3,"file":"static/js/229.05f3b73b.chunk.js","mappings":"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","sources":["common/components/RoomDetail.jsx","common/components/SliderModal.jsx","../node_modules/@mui/icons-material/Check.js"],"sourcesContent":["import React, { useEffect , useState} from 'react';\nimport roomListData from '../../data/roomList.json';\nimport { useLocation } from 'react-router-dom'; \nimport SliderModal from './SliderModal';\nimport CheckIcon from '@mui/icons-material/Check';\nimport { ListItem, ListItemText, Grid } from '@mui/material';\n\nconst RoomDetail = () => {\n    const location = useLocation();\n    const [room, setRoom] = useState();\n    const id = new URLSearchParams(location.search).get('id');\n    const [sliderOpen, setSliderOpen] = useState(false);\n    const [activeImageIndex, setActiveImageIndex] = useState(0); // Add state for active image index\n\n    const handleSliderOpen = (clickedIndex) => {\n      setActiveImageIndex(clickedIndex); // Set active index first\n      setSliderOpen(!sliderOpen); // Open the slider\n    };\n  \nuseEffect(() => {\n  let room = roomListData.filter(room => room.id === parseInt(id) );\n  if(room)\n  setRoom(room[0])\n}, [id]);\n  \n  if (!room) {\n    return <div>Room not found</div>; \n  }\n\n  return (\n    <div className=''>\n      <div>\n        <h1 className='text-4xl font-semibold py-8 text-text'>{ room.name}</h1>\n        \n          {room &&room.features.map(feature => (\n            <p className='text-text' key={feature}>{feature}</p>\n          ))}\n      </div>\n      <div className='grid grid-cols-1 md:grid-cols-2 mt-4 py-8'>\n  <span className='md:grid flex-col md:grid-cols-3  '>\n  <h2 className='font-semibold text-2xl text-textNavy col-span-3 py-4'>Amenities</h2>\n\n    {room.amenities.map((item, index) => (\n      <p \n      className='space-x-2 px-2 text-textNavy whitespace-nowrap text-sm' \n      key={index} >\n        <CheckIcon  sx={{ color: 'green' }} />\n        <span>{item}</span>   \n      </p>\n    ))}\n  </span>\n  <span>\n    <span>\n    <h2 className='font-semibold text-2xl text-textNavy  py-4'>Policies</h2>\n\n      {room.policies.map((item, index) => (\n        <p key={index} className={'space-x-2 text-textNavy text-sm'}>\n          <CheckIcon sx={{ color: 'green' }} />\n        <span>{item}</span> \n        </p>\n      ))}\n    </span>\n  </span>\n</div>\n      <div className='grid grid-cols-2 md:grid-cols-4 gap-1'>\n        {room &&room.images.map((image, index) => (\n          <img\n            key={index}\n            className={`object-contain cursor-pointer`}\n            src={process.env.PUBLIC_URL + '/' + image}\n            alt=''\n            loading=\"lazy\"\n            onClick={() => handleSliderOpen(index)}          \n          />\n        ))}\n      </div>\n      <SliderModal\n        images={room.images}\n        isOpen={sliderOpen}\n        onClose={handleSliderOpen}\n        activeImageIndex={activeImageIndex} // Pass the active image index\n      />\n    </div>\n  );\n};\n\nexport default RoomDetail; \n","import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport CloseIcon from '@mui/icons-material/Close';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  IconButton,\n  Typography,\n  Button,\n} from '@mui/material';\nimport Carousel from 'react-material-ui-carousel';\n\nconst SliderModal = ({ images, isOpen, onClose, activeImageIndex }) => {\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 767);\nconsole.log(images)\n  const handleClose = () => {\n    onClose();\n  };\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth < 767);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    // Clean up the event listener on component unmount\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  const { t } = useTranslation();\n  return (\n    <>{!isMobile ?\n      <Dialog\n      open={isOpen}\n      onClose={handleClose}\n      maxWidth=\"lg\"\n      fullWidth\n\n       // Set height to 100vh for mobile view\n    >\n  <DialogTitle>\n        <div className='flex justify-end items-center'>\n        <Button onClick={handleClose} color=\"primary\">\n<CloseIcon/>        </Button>\n        </div>\n      </DialogTitle> \n      <DialogContent> \n      <Carousel\n          index={activeImageIndex} // Set initial index based on prop\n          swipe={true} // Enable swipe interaction\n          animation=\"fade\" // Set animation type\n>\n          {images.map((image, index) => (\n            <img\n              key={index}\n              src={process.env.PUBLIC_URL + '' + image}\n              alt={`Image ${index + 1}`}\n              style={{ width: '100%', height: '100%', objectFit: 'contain' }}\n            />\n          ))}\n        </Carousel>\n      </DialogContent>\n      <DialogActions>\n        \n      </DialogActions>\n    </Dialog>\n    :\n    <Dialog\n      open={isOpen}\n      onClose={handleClose}\n     fullScreen\n      fullWidth\n\n       // Set height to 100vh for mobile view\n    >\n      <DialogTitle>\n        <div className='flex justify-end items-center'>\n        <Button onClick={handleClose} color=\"primary\">\n<CloseIcon/>        </Button>\n        </div>\n      </DialogTitle> \n      <DialogContent> \n      <Carousel\n          index={activeImageIndex} // Set initial index based on prop\n          swipe={true} // Enable swipe interaction\n          animation=\"fade\" // Set animation type\n>\n          {images.map((image, index) => (\n            <img\n              key={index}\n              src={process.env.PUBLIC_URL + '' + image}\n              alt={`Image ${index + 1}`}\n              style={{ width: '100%', height: '100%', objectFit: 'contain' }}\n            />\n          ))}\n        </Carousel>\n      </DialogContent>\n      <DialogActions>\n        \n      </DialogActions>\n    </Dialog>\n    }\n   </>\n    \n  );\n};\n\nexport default SliderModal;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');"],"names":["RoomDetail","location","useLocation","room","setRoom","useState","id","URLSearchParams","search","get","sliderOpen","setSliderOpen","activeImageIndex","setActiveImageIndex","handleSliderOpen","clickedIndex","useEffect","roomListData","filter","parseInt","_jsxs","className","children","_jsx","name","features","map","feature","amenities","item","index","CheckIcon","sx","color","policies","images","image","src","alt","loading","onClick","SliderModal","isOpen","onClose","_ref","isMobile","setIsMobile","window","innerWidth","console","log","handleClose","handleResize","addEventListener","removeEventListener","t","useTranslation","_Fragment","Dialog","open","fullScreen","fullWidth","DialogTitle","Button","CloseIcon","DialogContent","Carousel","swipe","animation","process","concat","style","width","height","objectFit","DialogActions","maxWidth","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}